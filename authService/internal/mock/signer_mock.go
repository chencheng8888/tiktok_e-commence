// Code generated by MockGen. DO NOT EDIT.
// Source: ./signer.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenGenerater is a mock of TokenGenerater interface.
type MockTokenGenerater struct {
	ctrl     *gomock.Controller
	recorder *MockTokenGeneraterMockRecorder
}

// MockTokenGeneraterMockRecorder is the mock recorder for MockTokenGenerater.
type MockTokenGeneraterMockRecorder struct {
	mock *MockTokenGenerater
}

// NewMockTokenGenerater creates a new mock instance.
func NewMockTokenGenerater(ctrl *gomock.Controller) *MockTokenGenerater {
	mock := &MockTokenGenerater{ctrl: ctrl}
	mock.recorder = &MockTokenGeneraterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenGenerater) EXPECT() *MockTokenGeneraterMockRecorder {
	return m.recorder
}

// GenerateJwtToken mocks base method.
func (m *MockTokenGenerater) GenerateJwtToken(userID int32, jwtSecret string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJwtToken", userID, jwtSecret)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJwtToken indicates an expected call of GenerateJwtToken.
func (mr *MockTokenGeneraterMockRecorder) GenerateJwtToken(userID, jwtSecret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJwtToken", reflect.TypeOf((*MockTokenGenerater)(nil).GenerateJwtToken), userID, jwtSecret)
}

// MockSetKeyer is a mock of SetKeyer interface.
type MockSetKeyer struct {
	ctrl     *gomock.Controller
	recorder *MockSetKeyerMockRecorder
}

// MockSetKeyerMockRecorder is the mock recorder for MockSetKeyer.
type MockSetKeyerMockRecorder struct {
	mock *MockSetKeyer
}

// NewMockSetKeyer creates a new mock instance.
func NewMockSetKeyer(ctrl *gomock.Controller) *MockSetKeyer {
	mock := &MockSetKeyer{ctrl: ctrl}
	mock.recorder = &MockSetKeyerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSetKeyer) EXPECT() *MockSetKeyerMockRecorder {
	return m.recorder
}

// SetKV mocks base method.
func (m *MockSetKeyer) SetKV(ctx context.Context, key string, value interface{}, expire time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetKV", ctx, key, value, expire)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetKV indicates an expected call of SetKV.
func (mr *MockSetKeyerMockRecorder) SetKV(ctx, key, value, expire interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetKV", reflect.TypeOf((*MockSetKeyer)(nil).SetKV), ctx, key, value, expire)
}
